@model ejemplo11.Models.Encuesta

@{
    ViewBag.Title = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Details</h2>
<ol class="breadcrumb mb-4">
    <li class="breadcrumb-item"><a href="@Url.Action("Index","Home")">Panel de administración</a></li>
    <li class="breadcrumb-item active">Preguntas</li>
</ol>


<div class="card">
    <div class="card-header">

        <i class="fas fa-users me-1"></i> Preguntas de Encuesta
    </div>

    <div class="card-body">
        <div class="row">
            <div class="col-12">
                <button type="button" class="btn btn-success" onclick="abrirModal(null)">Crear Nuevo</button>
            </div>
        </div>
    </div>


    <hr />
    <div class="col-log-12">
        <div class="row">
            <div class="col-md-4">
                <div class="card card-outline card-primary">
                    <div class="card-header">
                        <h3 class="card-title">Detalles de la encuesta</h3>
                    </div>
                    <div class="card-body p-0 py-2">
                        <div class="container-fluid">
                            <p class="mb-0">Id: @Html.DisplayFor(model => model.IdEncuesta)</p>

                            <p>Titulo: @Html.DisplayFor(model => model.Nombre)</p>
                            <p class="mb-0">Descripción: @Html.DisplayFor(model => model.Descripcion)</p> <br />
                            <small></small>
                            <p>Inicio: @Html.DisplayFor(model => model.Fecha_inicio)</p>

                            <p>Final: @Html.DisplayFor(model => model.Fecha_cierre)</p>

                        </div>
                        <hr class="border-primary">
                    </div>
                </div>
            </div>
            <div class="col-md-8">
                <div class="card card-outline card-success">
                    <div class="card-header">
                        <h3 class="card-title"><b>Preguntas de la encuesta</b></h3>
                        @*<div class="card-tools">
                            <button class="btn btn-block btn-sm btn-default btn-flat border-success nueva_pregunta" type="button" onclick="abrirModal(null)"><i class="fa fa-plus"></i> Agregar nueva pregunta</button>
                        </div>*@
                    </div>
                    <div class="card-body ui-sortable">

                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modal -->
<div class="modal fade" id="FormModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true" data-bs-backdrop="static">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-dark text-white">
                <h5 class="modal-title" id="exampleModalLabel">Departamento</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">

                <input id="txtid" type="hidden" value="0" />

                @*<input id="@Html.IdFor(model => model.IdEncuesta)" type="hidden" value="@Html.DisplayFor(model => model.IdEncuesta)" />*@

                <input id=""@Html.DisplayFor(model => model.IdEncuesta)" value="@Html.DisplayFor(model => model.IdEncuesta)" />


                <div class="row g-2">
                    <div class="col-sm-8">
                        <label for="" class="control-label">Pregunta</label>
                        <textarea name="question" id="txtpregunta" cols="180" rows="3" class="form-control"></textarea>
                    </div>

                    <div class="mb-6">
                        <label class="form-label">Tipo</label>
                        <select id="txtotipo" class="form-select">
                        </select>
                    </div>
                </div>

                <div class="row mt-2">
                    <div class="col-12">

                        <div id="mensajeError" class="alert alert-danger" role="alert">
                            A simple danger alert—check it out!
                        </div>

                    </div>
                </div>

            </div>

            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
                <button type="button" class="btn btn-primary" onclick="Guardar()">Guardar</button>
            </div>
        </div>
    </div>
</div>


@section Scripts
    {
    <script>

        jQuery.ajax({

            url: '@Url.Action("ListarTipoPregunta", "TipoPregunta")',
            type: "GET",
            data: null,
            dataType: "json",
            contentType: "application/json; charset=utf-8",

            success: function (data) {
                $("#txtotipo").html("");
                $("<option>").attr({ "value": "0", "disabled": true }).text("Seleccionar").appendTo("#txtotipo");
                $.each(data.data, function (index, item) {
                    $("<option>").attr({ "value": item.ID }).text(item.Descripcion).appendTo("#txtotipo");
                })
            },

            error: function (error) {
                console.log(error)
            }

        });

        @*jQuery.ajax({
            url: '@Url.Action("ListarEncuesta", "Encuesta")',
            type: "GET",
            data: null,
            dataType: "json",
            contentType: "application/json; charset=utf-8",

            success: function (data) {
                $("@Html.IdFor(model => model.IdEncuesta)").html("");
            }
        });*@




        function abrirModal(json) {

            $("#txtid").val(0);
            @*$("#@Html.IdFor(model => model.IdEncuesta)").blur(function () {
                var id = $(this).val().toUpperCase();
                $(this).val(id);
            });*@
            @*$("@Html.IdFor(model => model.IdEncuesta)").blur(function () {
                var id = $(this).val().toUpperCase();
                $(this).val(id);
            });*@

            $("@Html.IdFor(model => model.IdEncuesta)").val("IdEncuesta");

            $("#txtpregunta").val("");
            $("#txtotipo").val("");

            $("#mensajeError").hide();


            //Modal con información, editar
            if (json != null) {

                $("#txtid").val(json.ID);
                $("#txtpregunta").val(json.Titulo);
                $("#txtotipo").val(json.oIdTipo_pregunta.ID);

                /*$("#txtoactivo").val(json.Status == true ? 1 : 0);*/
                //$("#txtousuario").val(json.oIdUsuario.IdUsuario);

            }

            $("#FormModal").modal("show");
        }


        function Guardar() {

            var Pregunta = {

                IdEncuesta_pregunta: $("#txtid").val(),
                @*oIdEncuesta: $("#@Html.IdFor(model => model.IdEncuesta)").val(),*@

                @*oIdEncuesta: {
                    ID: $("#@Html.IdFor(model => model.IdEncuesta)").val()

                },*@

                oIdEncuesta: {
                    ID: $("@Html.IdFor(model => model.IdEncuesta)").blur(function () {

                        var id = $(this).val().toUpperCase();

                        $(this).val(id);

                    })
                },


                @*oIdEncuesta: {
                    ID: $("@Html.IdFor(model => model.IdEncuesta)").val("IdEncuesta")
                },*@

                Titulo: $("#txtpregunta").val(),

                oIdTipo_pregunta: {

                    ID: $("#txtotipo option:selected").val(),
                    Descripcion: $("#txtotipo option:selected").text()
                }

            }


            jQuery.ajax({
                url: '@Url.Action("GuardarEncuestaPregunta", "EncuestaPregunta")',
                type: "POST",
                data: JSON.stringify({ objeto: Pregunta }),
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                success: function (data) {

                    debugger;

                        //Nueva Pregunta

                    if (Pregunta.IdEncuesta_pregunta == 0) {

                        if (data.resultado != 0) {
                            Pregunta.IdEncuesta_pregunta = data.resultado;
                            tabladata.row.add(Pregunta).draw(false);
                            $("#FormModal").modal("hide");
                            swal("¡Bien hecho!", "La pregunta se ha agregado de forma correcta", "success");

                        } else {
                            $("#mensajeError").text(data.Mensaje);
                            $("#mensajeError").show();
                            /*swal("Mensaje", "No se pudo registrar el usuario", "error");*/
                            swal("Advertencia", data.Mensaje, "warning");
                        }

                    }
                        //Editar Pregunta

                    else {
                        if (data.resultado) {
                            tabladata.row(filaSeleccionada).data(Pregunta).draw(false);
                            filaSeleccionada = null;
                            $("#FormModal").modal("hide");
                            swal("¡Exito!", "La pregunta se ha editado de forma correcta.", "success");
                        } else {
                            $("#mensajeError").text(data.mensaje);
                            $("#mensajeError").show();
                            swal("Opps", "No se pudo guardar los cambios.", "error");
                        }
                    }
                },

                error: function (error) {
                    console.log(error)
                },
                beforeSend: function () {
                }


            });

        }

    </script>
}






@*<div>
        <h4>Encuesta</h4>
        <hr />
        <dl class="dl-horizontal">
            <dt>
                @Html.DisplayNameFor(model => model.IdEncuesta)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.IdEncuesta)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Nombre)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Nombre)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Descripcion)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Descripcion)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Fecha_inicio)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Fecha_inicio)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Fecha_cierre)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Fecha_cierre)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Status)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Status)
            </dd>

        </dl>
    </div>
    <p>
        @Html.ActionLink("Edit", "Edit", new { /* id = Model.PrimaryKey */ }) |
        @Html.ActionLink("Back to List", "Index")
    </p>*@
